on:
  workflow_dispatch:
    push:
      branches:
        - master # Changing the branch here would also work
 
jobs:
  health-checkup-job: #Check the healthy by running tests
    runs-on: ubuntu-latest
    services:
      postgres_main:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: boostan
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
 
    steps:
      - name: Set up Python
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run migrations
        env:
          DJANGO_DEBUG: 0
          DJANGO_SECRET_KEY: "secretsecretsecretsecret123456"
          DJANGO_SETTINGS_MODULE: "config.settings.production"
          DJANGO_ALLOWED_HOSTS: "*"
          DJANGO_ADMIN_URL: "admin/"
          DATABASE_URL: "postgres://postgres:postgres@127.0.0.1:5432/$POSTGRES_DB"
        run: |
          python manage.py makemigrations --noinput
          python manage.py migrate --noinput
      - name: Run Tests
        run: |
          python manage.py test
      - name: Check Syntax #We are just testing the syntax in names app; pycodestyle uses pep8 conventions of max line length of 79 characters while Django recommends 119 characters
        run: pycodestyle --statistics names
  #Before deploy job you would usually have the build job in case you are using docker images
  deploy-job:
      runs-on: ubuntu-latest
      needs: [health-checkup-job]
      if: ${{ github.event_name == 'push' }}
      steps:
        - name: Init heroku
          uses: actions/checkout@v2
        - name: Deploying to heroku
          uses: akhileshns/heroku-deploy@v3.12.12
          with:
            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
            heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
            heroku_email: ${{secrets.HEROKU_EMAIL}}
        # - name: Set environment
        #   env:
        #     DJANGO_DEBUG: "0"
        #     DJANGO_SECRET_KEY: "secretsecretsecretsecret123456"
        #     DJANGO_SETTINGS_MODULE: "config.settings.production"
        #     DJANGO_ALLOWED_HOSTS: "*"
        #     DJANGO_ADMIN_URL: "admin/"